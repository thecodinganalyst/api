name: CI & Docker (GHCR + Signing)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*", "v*", "V*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build, Test, Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Setup Gradle (caching only)
        uses: gradle/actions/setup-gradle@v4

      - name: Build & Test (enforces JaCoCo â‰¥ 90%)
        run: ./gradlew clean test jacocoTestReport jacocoTestCoverageVerification check

      - name: Upload JUnit test results (XML + HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: |
            **/build/test-results/test/*.xml
            **/build/reports/tests/test/**

      - name: Upload JaCoCo coverage report (XML + HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            **/build/reports/jacoco/test/**
            **/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Build bootJar (needed if Dockerfile Option A)
        uses: gradle/actions/setup-gradle@v4
        with:
          arguments: |
            bootJar

  docker:
    name: Build & Push Docker (GHCR) + Sign
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
      packages: write
      id-token: write  # for cosign keyless signing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Optional: tweak tag strategy. Defaults cover refs/heads & tags.
          # Example to ensure 'latest' on main:
          tags: |
            type=ref,event=branch,branch=main,enable=true
            type=sha,enable=true
            type=semver,pattern={{version}}

      - name: Build & push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Pass the jar path if using Dockerfile Option A:
          build-args: |
            JAR_FILE=build/libs/*.jar

      - name: Sign the published image (cosign)
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
